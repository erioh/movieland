<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getMoviesByGenreIdSQL" class="java.lang.String">
        <constructor-arg value="select m.movie_id, m.name_russian, m.name_native,
        m.year_of_release, m.description, m.rating, m.price, m.picture_path from movie m
        inner join movie_genre mg on m.movie_id = mg.movie_id
        where mg.genre_id = ?"/>
    </bean>
    <bean id="getAllMoviesSQL" class="java.lang.String">
        <constructor-arg value="select m.movie_id, m.name_russian, m.name_native,
        m.year_of_release, m.description, m.rating, m.price, m.picture_path from movie m"/>
    </bean>
    <bean id="getCountOfMoviesSQL" class="java.lang.String">
        <constructor-arg value="select count(*) from movie;"/>
    </bean>
    <bean id="getMovieByIdSQL" class="java.lang.String">
        <constructor-arg value="select m.movie_id, m.name_russian, m.name_native,
        m.year_of_release, m.description, m.rating, m.price, m.picture_path from movie m
        where m.movie_id in (:ids);"/>
    </bean>
    <bean id="saveMovieSQL" class="java.lang.String">
        <constructor-arg value="insert into movie (name_Russian, name_Native, year_Of_Release, description, rating, price, picture_path) values (:nameRussian, :nameNative, :yearOfRelease, :description, :rating, :price, :picturePath);"/>
    </bean>


</beans>